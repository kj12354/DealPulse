version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: dealpulse_db
      POSTGRES_USER: dealpulse
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dealpulse -d dealpulse_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for job queue
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI Application
  api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://dealpulse:password@db:5432/dealpulse_db
      - REDIS_URL=redis://redis:6379/0
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      - FROM_EMAIL=${FROM_EMAIL:-noreply@dealpulse.com}
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key-change-in-production}
      - DEBUG=${DEBUG:-True}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    command: >
      sh -c "
        # Wait for database to be ready
        echo 'Waiting for database...' &&
        sleep 5 &&
        
        # Run database migrations
        echo 'Running database migrations...' &&
        alembic upgrade head &&
        
        # Start the API server
        echo 'Starting API server...' &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "

  # RQ Worker for background jobs
  worker:
    build: .
    environment:
      - DATABASE_URL=postgresql://dealpulse:password@db:5432/dealpulse_db
      - REDIS_URL=redis://redis:6379/0
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      - FROM_EMAIL=${FROM_EMAIL:-noreply@dealpulse.com}
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key-change-in-production}
      - DEBUG=${DEBUG:-True}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - WORKER_CONCURRENCY=${WORKER_CONCURRENCY:-2}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    command: python worker.py
    deploy:
      replicas: 2

volumes:
  postgres_data:
  redis_data: 